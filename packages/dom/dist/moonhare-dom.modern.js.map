{"version":3,"file":"moonhare-dom.modern.js","sources":["../src/extract.ts","../src/insert.ts","../src/getindex.ts","../src/stringify.ts","../src/index.ts","../src/sheet.ts"],"sourcesContent":["export let extract = (sheet: CSSStyleSheet) => {\r\n    let css = ''\r\n    while (sheet.cssRules.length) {\r\n        css += sheet.cssRules[0].cssText\r\n        sheet.deleteRule(0)\r\n    }\r\n    return css\r\n}\r\n","import { Style } from '@moonhare/core'\r\nimport { getIndex } from './getindex'\r\nimport { stringify } from './stringify'\r\n\r\nexport let insert = (sheet: CSSStyleSheet, style: Style) => {\r\n    let { m: score, r: atRuleScore } = style\r\n    let index = getIndex(score as number, atRuleScore as number, sheet.cssRules)\r\n    sheet.insertRule(stringify(style), index)\r\n    // @ts-ignore we are hacking built in css rule\r\n    sheet.cssRules[index].a = atRuleScore\r\n    // @ts-ignore we are hacking built in css rule\r\n    sheet.cssRules[index].s = score\r\n}\r\n","export let getIndex = (score: number, atRuleScore: number, cssRules: CSSRuleList) => {\r\n    // set the index to last\r\n    let index = cssRules.length\r\n\r\n    // find the index of the style\r\n    for (let i = 0, len = cssRules.length; i < len; ++i) {\r\n        // @ts-ignore we are hacking built in css rule\r\n        if ((cssRules[i].a as number) > atRuleScore || (cssRules[i].s as number) > score) {\r\n            index = i\r\n            break\r\n        }\r\n    }\r\n\r\n    return index\r\n}\r\n","import { Style } from '@moonhare/core'\r\n\r\nexport let stringify = ({ s: selector, p: property, v: value, a: atRules }: Style) => {\r\n    atRules.push(selector)\r\n    return atRules.reduce((css, atRule) => atRule + '{' + css + '}', property + ':' + value)\r\n}\r\n","import type { Context } from '@moonhare/core'\nimport { extract } from './extract'\nimport { insert } from './insert'\nimport { getSheet } from './sheet'\n\ninterface DOMContext extends Context {\n    extract: () => string\n}\n\nexport let render = (ctx: Context, container: HTMLElement) => {\n    let sheet = getSheet(container)\n    let domCtx: DOMContext = ctx as DOMContext\n    domCtx.extract = extract.bind(null, sheet)\n    domCtx.listen(insert.bind(null, sheet))\n    return domCtx\n}\n","let ID = 'mh' as const\r\n\r\nexport let getSheet = (target: HTMLElement = document.head) =>\r\n    // Querying the existing target for a previously defined <style> tag\r\n    // We're doing a querySelector because the <head> element doesn't implemented the getElementById api\r\n    (\r\n        (target.querySelector('#' + ID) as HTMLStyleElement) ||\r\n        Object.assign(target.appendChild(document.createElement('style')), {\r\n            innerHTML: ' ',\r\n            id: ID\r\n        })\r\n    ).sheet as CSSStyleSheet\r\n"],"names":["extract","sheet","css","cssRules","length","cssText","deleteRule","insert","style","m","score","r","atRuleScore","index","i","len","a","s","getIndex","insertRule","selector","p","property","v","value","atRules","push","reduce","atRule","stringify","render","ctx","container","target","document","head","querySelector","Object","assign","appendChild","createElement","innerHTML","id","getSheet","domCtx","bind","listen"],"mappings":"IAAWA,EAAWC,IAClB,IAAIC,EAAM,GACV,KAAOD,EAAME,SAASC,QAClBF,GAAOD,EAAME,SAAS,GAAGE,QACzBJ,EAAMK,WAAW,GAErB,OAAOJ,GCFAK,EAAS,CAACN,EAAsBO,KACvC,IAAMC,EAAGC,EAAOC,EAAGC,GAAgBJ,EAC/BK,ECNc,EAACH,EAAeE,EAAqBT,KAEvD,IAAIU,EAAQV,EAASC,OAGrB,IAAK,IAAIU,EAAI,EAAGC,EAAMZ,EAASC,OAAQU,EAAIC,IAAOD,EAE9C,GAAKX,EAASW,GAAGE,EAAeJ,GAAgBT,EAASW,GAAGG,EAAeP,EAAO,CAC9EG,EAAQC,EACR,MAIR,OAAOD,GDPKK,CAASR,EAAiBE,EAAuBX,EAAME,UACnEF,EAAMkB,WELa,GAAGF,EAAGG,EAAUC,EAAGC,EAAUC,EAAGC,EAAOR,EAAGS,MAC7DA,EAAQC,KAAKN,GACNK,EAAQE,OAAO,CAACzB,EAAK0B,IAAWA,EAAS,IAAM1B,EAAM,IAAKoB,EAAW,IAAME,IFGjEK,CAAUrB,GAAQK,GAEnCZ,EAAME,SAASU,GAAOG,EAAIJ,EAE1BX,EAAME,SAASU,GAAOI,EAAIP,GGFnBoB,EAAS,CAACC,EAAcC,KAC/B,IAAI/B,ECRc,EAACgC,EAAsBC,SAASC,QAI7CF,EAAOG,cAAc,QACtBC,OAAOC,OAAOL,EAAOM,YAAYL,SAASM,cAAc,UAAW,CAC/DC,UAAW,IACXC,GATH,QAWHzC,MDDU0C,CAASX,GACjBY,EAAqBb,EAGzB,OAFAa,EAAO5C,QAAUA,EAAQ6C,KAAK,KAAM5C,GACpC2C,EAAOE,OAAOvC,EAAOsC,KAAK,KAAM5C,IACzB2C"}